uniform float4x4 ViewProj;
uniform texture2d bottom_image;
uniform texture2d top_image;

sampler_state def_sampler {
	Filter   = Linear;
	AddressU = Clamp;
	AddressV = Clamp;
};

struct VertInOut {
	float4 pos : POSITION;
	float2 uv  : TEXCOORD0;
};

VertInOut VSDefault(VertInOut vert_in)
{
	VertInOut vert_out;
	vert_out.pos = mul(float4(vert_in.pos.xyz, 1.0), ViewProj);
	vert_out.uv  = vert_in.uv;
	return vert_out;
}

float4 PSDraw(VertInOut vert_in) : TARGET
{
    float4 bottom_color = bottom_image.Sample(def_sampler, vert_in.uv);
	float4 top_color = top_image.Sample(def_sampler, vert_in.uv);
	if(top_color.a > 0.1 && bottom_color.a > 0.1)
		return top_color * top_color.a + bottom_color * (1.0 - top_color.a);
	else if(top_color.a > 0.1 && bottom_color.a < 0.1)
		return top_color;
	else 
		return bottom_color;
}

technique Draw
{
	pass
	{
		vertex_shader = VSDefault(vert_in);
		pixel_shader  = PSDraw(vert_in);
	}
}
